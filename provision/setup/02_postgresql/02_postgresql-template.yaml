kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: postgresql-persistent
  annotations:
    description: |-
      PostgreSQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.
    iconClass: icon-postgresql
    openshift.io/display-name: PostgreSQL
    openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/postgresql.html
    openshift.io/long-description: This template provides a standalone PostgreSQL server with a database created. The database is stored on persistent storage. The database name, username, and password are chosen via parameters when provisioning this service.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: database,postgresql
labels:
  template: postgresql-persistent-template
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-name: ${POSTGRESQL_DATABASE}
    database-password: ${POSTGRESQL_PASSWORD}
    database-user: ${POSTGRESQL_USER}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${DATABASE_SERVICE_NAME}
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: ${DATABASE_SERVICE_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${DATABASE_SERVICE_NAME}
    template:
      metadata:
        labels:
          app: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - name: postgresql
          image: ${POSTGRESQL_IMAGE}  # ここに変更
          imagePullPolicy: IfNotPresent
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-password
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: ${DATABASE_SERVICE_NAME}
                key: database-name
          ports:
          - containerPort: 5432
            protocol: TCP
          volumeMounts:
          - name: ${DATABASE_SERVICE_NAME}-data
            mountPath: /var/lib/pgsql/data
          - name: postgres-init-volume
            mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
        volumes:
        - name: ${DATABASE_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${DATABASE_SERVICE_NAME}
        - name: postgres-init-volume
          configMap:
            name: postgres-init-scripts
            defaultMode: 420
parameters:
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  value: 512Mi
  required: true
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  description: The name of the OpenShift Service exposed for the database.
  value: postgresql
  required: true
- name: POSTGRESQL_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  generate: expression
  from: '[a-zA-Z0-9]{16}'
  required: true
- name: POSTGRESQL_DATABASE
  displayName: PostgreSQL Database Name
  description: Name of the PostgreSQL database accessed.
  value: sampledb
  required: true
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi.
  value: 5Gi
  required: true
- name: POSTGRESQL_VERSION
  displayName: Version of PostgreSQL Image
  description: Version of PostgreSQL image to be used (10-el7, 10-el8, or latest).
  value: 10-el8
  required: true
- name: POSTGRESQL_IMAGE
  displayName: PostgreSQL Image
  description: The PostgreSQL image to use.
  value: registry.redhat.io/rhel8/postgresql-10  # デフォルト値を指定
  required: true